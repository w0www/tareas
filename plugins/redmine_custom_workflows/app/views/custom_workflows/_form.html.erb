<div class="splitcontent">
  <div class="splitcontentleft">
    <div class="box tabular">
      <p><%= f.text_field :name, :required => true, :size => 50 %></p>
      <p><%= f.text_field :author, :size => 50, :label => :field_custom_workflow_author %>
        <em class="info"><%= l(:text_custom_workflow_author) %></em>
      </p>
      <p><%= f.select :observable,
                      CustomWorkflow::OBSERVABLES.collect {|o| [l("custom_workflow_observable_#{o}"), o]}, {},
                      :onchange => 'this.form.submit()',
                      :disabled => !@workflow.new_record? %></p>
      <p><%= f.text_area :description, :cols => 40, :rows => 5 %></p>
      <% if @workflow.has_projects_association? %>
        <p><%= f.check_box :is_for_all, :onclick => "checkAndDisable('custom_workflow_enabled_projects', this.checked);", :label => :field_enabled_for_all_projects %></p>
      <% end %>
      <p><%= f.check_box :active, :label => :field_custom_workflow_active %></p>
    </div>
  </div>

  <% if @workflow.has_projects_association? %>
    <div class="splitcontentright">
      <fieldset class="box" id="custom_workflow_enabled_projects">
        <legend><%= l(:label_enabled_projects) %></legend>
        <%= custom_workflows_render_nested_projects(Project.visible.active) do |p|
          content_tag('label', check_box_tag('custom_workflow[project_ids][]', p.id, @workflow.project_ids.include?(p.id) || @workflow.is_for_all?,
                                             :id => nil, :disabled => @workflow.is_for_all?) + ' ' + h(p), :class => 'block')
        end %>
        <%= hidden_field_tag('custom_workflow[project_ids][]', '', :id => nil) %>
        <p><%= check_all_links 'custom_workflow_enabled_projects' %></p>
      </fieldset>
    </div>
  <% end %>
</div>

<div style="clear: left;"></div>

<fieldset class="box">
  <legend><%= l(:label_workflow_scripts) %></legend>
  <% observable = @workflow.observable.to_sym %>
  <p>
    <em class="info"><%= l("text_custom_workflow_#{observable}_code_note") %></em>
  </p>
  <% case observable %>
  <% when :shared %>
    <%= f.text_area :shared_code, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
  <% when *CustomWorkflow::COLLECTION_OBSERVABLES %>
    <%= render :layout => 'layouts/collapsible',
               :locals => {
                   :collapsed => (not (@workflow.before_add.present? or @workflow.after_add.present? or @workflow.errors[:base].present?)),
                   :label => l(:label_add_workflows)} do %>
      <div class="splitcontent">
        <div class="splitcontentleft">
          <%= f.text_area :before_add, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
        </div>
        <div class="splitcontentright">
          <%= f.text_area :after_add, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
        </div>
      </div>
    <% end %>
    <%= render :layout => 'layouts/collapsible',
               :locals => {
                   :collapsed => (not (@workflow.before_remove.present? or @workflow.after_remove.present?)),
                   :label => l(:label_remove_workflows)} do %>
      <div class="splitcontent">
        <div class="splitcontentleft">
          <%= f.text_area :before_remove, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
        </div>
        <div class="splitcontentright">
          <%= f.text_area :after_remove, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
        </div>
      </div>
    <% end %>
  <% when *CustomWorkflow::SINGLE_OBSERVABLES %>
    <%= render :layout => 'layouts/collapsible',
               :locals => {
                   :collapsed => (not (@workflow.before_save.present? or @workflow.after_save.present? or @workflow.errors[:base].present?)),
                   :label => l(:label_save_workflows)} do %>
      <div class="splitcontent">
        <div class="splitcontentleft">
          <%= f.text_area :before_save, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
          <% if observable == :issue %>
            <em class="info"><%= l(:text_custom_workflow_before_save_note) %></em>
          <% end %>
        </div>
        <div class="splitcontentright">
          <%= f.text_area :after_save, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
          <% if observable == :issue %>
            <em class="info"><%= l(:text_custom_workflow_after_save_note) %></em>
          <% end %>
        </div>
      </div>
    <% end %>
    <%= render :layout => 'layouts/collapsible',
               :locals => {
                   :collapsed => (not (@workflow.before_destroy.present? or @workflow.after_destroy.present?)),
                   :label => l(:label_destroy_workflows)} do %>
      <div class="splitcontent">
        <div class="splitcontentleft">
          <%= f.text_area :before_destroy, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
        </div>
        <div class="splitcontentright">
          <%= f.text_area :after_destroy, :cols => 40, :rows => 20, :wrap => 'off', :class => 'custom_workflow_script' %>
        </div>
      </div>
    <% end %>
  <% end %>
</fieldset>

<script type="text/javascript">
    jQuery('.custom_workflow_script').taboverride(2, true);
    function checkAndDisable(id, checked) {
        if (checked) {
            jQuery('#' + id).find('input[type=checkbox]').attr('checked', true).attr('disabled', true);
        } else {
            jQuery('#' + id).find('input[type=checkbox]').removeAttr('checked').removeAttr('disabled');
        }
    }
</script>

<%= wikitoolbar_for :custom_workflow_description %>

<% content_for :header_tags do %>
    <%= javascript_include_tag "tab_override", :plugin => 'redmine_custom_workflows' %>
<% end %>